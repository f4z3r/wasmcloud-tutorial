apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: echo
  annotations:
    version: v0.0.1
    description: "Echo demo server"
spec:
  components:
    - name: echo
      type: component
      properties:
        # To use the locally compiled code in this folder, use the line below instead after running `wash build`:
        image: file://./build/echo_s.wasm
        id: echo
      traits:
        # Govern the spread/scheduling of the component
        - type: spreadscaler
          properties:
            instances: 1
        # Establish a unidirectional link to the messaging capability provider (powered by NATS),
        # so the `echo` component can make use of messaging interface functionality
        # (i.e. making interacting with the messaging system, in this case NATS)
        - type: link
          properties:
            target:
              name: nats
            namespace: wasmcloud
            package: messaging
            interfaces: [consumer]

        # Add a capability provider that enables HTTP access
    - name: httpserver
      type: capability
      properties:
        image: ghcr.io/wasmcloud/http-server:0.27.0
        ## To configure OTEL integration for this provider specifically, uncomment the lines below
        # config:
        #   - name: otel
        #     properties:
        #       otel_exporter_otlp_endpoint: "http://all-in-one:4318"
        #       otel_exporter_otlp_traces_endpoint: "http://traces-backend/v1/traces"
        #       otel_exporter_otlp_metrics_endpoint: "http://metrics-backend/v1/metrics"
        #       otel_exporter_otlp_logs_endpoint: "http://logs-backend/v1/logs"
      traits:
        # Establish a unidirectional link from this http server provider (the "source")
        # to the `http-component` component (the "target") so the component can handle incoming HTTP requests,
        #
        # The source (this provider) is configured such that the HTTP server listens on 0.0.0.0:8000
        - type: link
          properties:
            target:
              name: echo
            namespace: wasi
            package: http
            interfaces: [incoming-handler]
            source:
              config:
                - name: default-http
                  properties:
                    address: 0.0.0.0:8000

    # Add a capability provider that implements `wasmcloud:messaging` using NATS
    - name: nats
      type: capability
      properties:
        image: ghcr.io/wasmcloud/messaging-nats:0.27.0
        ## To configure OTEL integration for this provider specifically, uncomment the lines below
        # config:
        #   - name: otel
        #     properties:
        #       otel_exporter_otlp_endpoint: "http://all-in-one:4318"
        #       otel_exporter_otlp_traces_endpoint: "http://traces-backend/v1/traces"
        #       otel_exporter_otlp_metrics_endpoint: "http://metrics-backend/v1/metrics"
        #       otel_exporter_otlp_logs_endpoint: "http://logs-backend/v1/logs"
      # traits:
      #   # Since the `nats` capability provider calls an component to handle messages
      #   # coming over subscriptions, this provider needs a unidirectional link to the
      #   # component that will be called.
      #   #
      #   # Here we link the `nats` provider (the "source"), to the `echo` component (the "target"),
      #   # so that so the provider can deliver messages to the component (by invoking the wasmcloud:messaging/handler interface) .
      #   - type: link
      #     properties:
      #       target:
      #         name: echo
      #       namespace: wasmcloud
      #       package: messaging
      #       interfaces: [handler]
      #       source:
      #         config:
      #           - name: simple-subscription
      #             properties:
      #               subscriptions: wasmcloud.echo
