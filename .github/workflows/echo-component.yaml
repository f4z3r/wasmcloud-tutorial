name: echo-component

on:
  push:
    branches:
      - main
    tags:
      - echo-component-v[0-9]+.[0-9]+.[0-9]+
  pull_request:
    branches: [main]
    paths:
      - .github/workflows/echo-component.yml
      - kubernetes/components/echo/**

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  WASH_VERSION: "0.39.0"
  WASM_TOOLS_VERSION: "1.239.0"

jobs:
  echo-build:
    permissions:
      contents: read
      checks: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Fetch Rust build cache
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: |
            kubernetes/components/echo/target/
          key: cargo-${{ hashFiles('kubernetes/components/echo/Cargo.lock') }}
      - name: Install devbox
        uses: jetify-com/devbox-install-action@a0d2d53632934ae004f878c840055956d9f741b0 # v0.14.0
        with:
          project-path: ./kubernetes/components/echo
          enable-cache: "true"
          devbox-version: 0.16.0
      - name: Build component
        working-directory: kubernetes/components/echo
        run: devbox run build
      - name: Save Rust build cache
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: |
            kubernetes/components/echo/target/
          key: cargo-${{ hashFiles('kubernetes/components/echo/Cargo.lock') }}
      - name: Upload artifact for publish step
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        if: ${{ startswith(github.ref, 'refs/tags/echo-component-v') }}
        with:
          name: echo-component
          path: kubernetes/components/echo/build/echo_s.wasm

  echo-publish:
    runs-on: ubuntu-24.04
    needs: [echo-build]
    if: ${{ startswith(github.ref, 'refs/tags/echo-component-v') }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - name: Determine version
        id: meta
        shell: bash
        env:
          REF: ${{ github.ref }}
          REF_PREFIX: 'refs/tags/echo-component-v'
        run: |
          export VERSION=${REF#$REF_PREFIX};
          echo -e "version=${VERSION}" >> $GITHUB_OUTPUT;
      - name: Download artifact from build step
        uses: actions/download-artifact@4a24838f3d5601fd639834081e118c2995d51e1c
        with:
          path: kubernetes/components/echo/artifacts
      - name: Install wash
        uses: taiki-e/install-action@ad95d4e02e061d4390c4b66ef5ed56c7fee3d2ce # v2.58.17
        with:
          tool: ${{ format('wash@{0},wasm-tools@{1}', env.WASH_VERSION, env.WASM_TOOLS_VERSION) }}
      # - name: Push SHA-tagged WebAssembly binary to GHCR
      #   env:
      #     WASH_REG_USER: ${{ github.repository_owner }}
      #     WASH_REG_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      #   working-directory: kubernetes/components/echo
      #   run: |
      #     wash push ghcr.io/${{ github.repository_owner }}/wasmcloud-tutorial/echo:${{ github.sha }} artifacts/echo_s.wasm
      - name: Push version-tagged WebAssembly binary to GHCR
        env:
          WASH_REG_USER: ${{ github.repository_owner }}
          WASH_REG_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        working-directory: kubernetes/components/echo
        run: |
          wash push ghcr.io/${{ github.repository_owner }}/wasmcloud-tutorial/echo:${{ steps.meta.outputs.version }} artifacts/echo_s.wasm
